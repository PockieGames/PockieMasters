/*!
 * TSBuffer Schema v2.2.0
 * -----------------------------------------
 * MIT LICENSE
 * KingWorks (C) Copyright 2022
 * https://github.com/k8w/tsbuffer-schema
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/**
 * Enum for every possible `TSBufferSchema['type']`
 */
var SchemaType = /** @class */ (function () {
    function SchemaType() {
    }
    // #region 确定的TypeScript的类型
    SchemaType.Boolean = 'Boolean';
    SchemaType.Number = 'Number';
    SchemaType.String = 'String';
    SchemaType.Array = 'Array';
    SchemaType.Tuple = 'Tuple';
    SchemaType.Enum = 'Enum';
    SchemaType.Any = 'Any';
    SchemaType.Literal = 'Literal';
    SchemaType.Object = 'Object';
    SchemaType.Interface = 'Interface';
    SchemaType.Buffer = 'Buffer';
    SchemaType.IndexedAccess = 'IndexedAccess';
    SchemaType.Reference = 'Reference';
    SchemaType.Keyof = 'Keyof';
    SchemaType.Union = 'Union';
    SchemaType.Intersection = 'Intersection';
    SchemaType.NonNullable = 'NonNullable';
    SchemaType.Date = 'Date';
    // #endregion
    // #region 非TypeScript基本类型，临时过渡用
    SchemaType.Pick = 'Pick';
    SchemaType.Partial = 'Partial';
    SchemaType.Omit = 'Omit';
    SchemaType.Overwrite = 'Overwrite';
    // #endregion
    SchemaType.Custom = 'Custom';
    return SchemaType;
}());

exports.SchemaType = SchemaType;
